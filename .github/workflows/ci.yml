name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      
      - name: Validate project structure
        run: |
          echo "üì¶ Validating project dependencies..."
          uv pip compile pyproject.toml --quiet
          echo "‚úÖ Dependencies are valid"
          
          echo ""
          echo "üìÅ Checking project structure..."
          test -d agents && echo "‚úÖ agents/ directory exists" || exit 1
          test -d tests && echo "‚úÖ tests/ directory exists" || exit 1
          test -f main.py && echo "‚úÖ main.py exists" || exit 1
          test -f pyproject.toml && echo "‚úÖ pyproject.toml exists" || exit 1
          
          echo ""
          echo "‚úÖ Project structure validation passed!"
  
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      
      - name: Check Python syntax
        run: |
          echo "üîç Checking Python syntax..."
          python3 -m py_compile main.py
          python3 -m py_compile config.py
          find agents -name "*.py" -exec python3 -m py_compile {} \;
          echo "‚úÖ All Python files have valid syntax"
  
  standards-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check CLAUDE-IMPLEMENTATION-STANDARDS compliance
        run: |
          echo "üîç Checking Claude Implementation Standards..."
          
          # Check 1: No model aliases (only fail on obvious violations)
          if grep -r 'model\s*=\s*"sonnet"' agents/ 2>/dev/null; then
            echo "‚ùå FAIL: Found model alias 'sonnet' (use full version)"
            exit 1
          fi
          echo "‚úÖ No model aliases found"
          
          # Check 2: Documentation exists
          if [ ! -f "CLAUDE-IMPLEMENTATION-STANDARDS.md" ]; then
            echo "‚ùå FAIL: CLAUDE-IMPLEMENTATION-STANDARDS.md not found"
            exit 1
          fi
          echo "‚úÖ Implementation standards document exists"
          
          if [ ! -f ".claude.md" ]; then
            echo "‚ùå FAIL: .claude.md not found"
            exit 1
          fi
          echo "‚úÖ Claude configuration document exists"
          
          # Check 3: Agent files exist
          test -f "agents/meta_orchestrator.py" && echo "‚úÖ meta_orchestrator.py exists" || exit 1
          test -f "agents/knowledge_builder.py" && echo "‚úÖ knowledge_builder.py exists" || exit 1
          
          echo ""
          echo "‚úÖ All critical standards checks passed!"
